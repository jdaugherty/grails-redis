name: Release
on:
  release:
    types: [published]
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GIT_USER_NAME: 'grails-build'
      GIT_USER_EMAIL: 'grails-build@users.noreply.github.com'
    steps:
      - name: "📥 Checkout repository"
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: "☕️ Setup JDK"
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: liberica
      - name: "🐘 Setup Gradle"
        uses: gradle/actions/setup-gradle@v4
        with:
          develocity-access-key: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      - name: "📝 Store the current release version"
        id: release_version
        run: echo "release_version=${GITHUB_REF:11}" >> $GITHUB_OUTPUT
      - name: "⚙ Run pre-release"
        uses: grails/github-actions/pre-release@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: "🔐 Generate key file for artifact signing"
        env:
          SECRING_FILE: ${{ secrets.SECRING_FILE }}
        run: echo $SECRING_FILE | base64 -d > ${{ github.workspace }}/secring.gpg
      - name: "📤 Publish artifacts to Sonatype"
        id: publish
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          NEXUS_PUBLISH_USERNAME: ${{ secrets.NEXUS_PUBLISH_USERNAME }}
          NEXUS_PUBLISH_PASSWORD: ${{ secrets.NEXUS_PUBLISH_PASSWORD }}
          NEXUS_PUBLISH_URL: ${{ secrets.NEXUS_PUBLISH_RELEASE_URL }}
          NEXUS_PUBLISH_STAGING_PROFILE_ID: ${{ secrets.NEXUS_PUBLISH_STAGING_PROFILE_ID }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
          SECRING_FILE: ${{ secrets.SECRING_FILE }}
        run: >
          ./gradlew -Psigning.secretKeyRingFile=${{ github.workspace }}/secring.gpg publishToSonatype closeAndReleaseSonatypeStagingRepository
      - name: Publish Documentation
        if: success()
        uses: gradle/gradle-build-action@v3
        with:
          arguments: :grails-redis:groovydoc
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
      - name: Publish to Github Pages
        if: success()
        uses: grails/github-pages-deploy-action@v2.0.2
        env:
          SKIP_SNAPSHOT: ${{ contains(steps.release_version.outputs.release_version, 'M') }}
          TARGET_REPOSITORY: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: plugin/build/docs
          DOC_FOLDER: gh-pages
          COMMIT_EMAIL: ${{ env.GIT_USER_EMAIL }}
          COMMIT_NAME: ${{ env.GIT_USER_NAME }}
          VERSION: ${{ steps.release_version.outputs.release_version }}
      - name: Run post-release
        if: success()
        uses: grails/github-actions/post-release@main
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
        env:
          SNAPSHOT_SUFFIX: -SNAPSHOT
