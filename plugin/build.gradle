plugins {
    id "java-library"
    id "eclipse"
    id "idea"
    id "org.grails.grails-plugin"
}

version = project.projectVersion
group = "org.grails.plugins"

apply plugin: 'org.grails.grails-publish'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

configurations {
    documentation.extendsFrom compileClasspath
    all {
        resolutionStrategy {
            force "org.apache.commons:commons-pool2:$commonsPool2Version"
        }
    }
}

repositories {
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-dependencies"

    testImplementation 'org.grails:grails-web-testing-support'

    implementation "org.grails:grails-console"

    api "redis.clients:jedis:$jredisVersion"
    api "com.google.code.gson:gson:$gsonVersion"

    documentation("com.github.javaparser:javaparser-core:$javaParserCoreVersion") {
        transitive = false
    }
}

groovydoc {
    groovyClasspath += configurations.documentation
}

test {
    useJUnitPlatform()
}

jar {
  exclude "application.groovy"
  exclude "src/test/projects/**"
}

grailsPublish {
    githubSlug = 'grails/grails-redis'
    license {
        name = 'Apache-2.0'
    }
    title = 'Grails Redis Plugin'
    desc = 'This Plugin provides access to Redis and various utilities (service, annotations, etc) for caching.'
    developers = ['tednaleid': 'Ted Naleid', 'burtbeckwith': 'Burt Beckwith', 'christianoestreich': 'Christian Oestreich',
                  'briancoles': 'Brian Coles', 'michaelcameron': 'Michael Cameron', 'johnengelman': 'John Engelman',
                  'davidseiler': 'David Seiler', 'jordonsaardchit': 'Jordon Saardchit', 'florianlangenhahn': 'Florian Langenhahn',
                  'germansancho': 'German Sancho', 'johnmulhern': 'John Mulhern', 'shaunjurgemeyer': 'Shaun Jurgemeyer',
                  'puneetbehl': 'Puneet Behl']
}